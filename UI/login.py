# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'login.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import os

from PyQt5 import QtCore, QtGui, QtWidgets
import database.HandleDatabase as db
from UI import userUI
from UI import adminUI
from UI import registe

class Ui_login_form(QtWidgets.QMainWindow):
    def __init__(self):
        super(Ui_login_form, self).__init__()
        self.Form:QtWidgets.QWidget
        self.registe_form = None
        self.db_handler = db.DatabaseHandler()  # 创建DatabaseHandler实例
        self.setupUi(self)
    def setupUi(self, login_form):
        login_form.setObjectName("login_form")
        self.Form=login_form
        login_form.resize(682, 435)
        self.determine_buttion = QtWidgets.QPushButton(login_form)
        self.determine_buttion.setGeometry(QtCore.QRect(360, 310, 101, 41))
        self.determine_buttion.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.determine_buttion.setStyleSheet("height: 30px;\n"
"border-radius: 15px;\n"
"padding-left: 10px;\n"
"border: 1px solid  rgb(85, 0, 255);")
        self.determine_buttion.setAutoDefault(False)
        self.determine_buttion.setObjectName("determine_buttion")
        self.register_buttion = QtWidgets.QPushButton(login_form)
        self.register_buttion.setGeometry(QtCore.QRect(210, 310, 91, 41))
        self.register_buttion.setStyleSheet("height: 30px;\n"
"border-radius: 15px;\n"
"padding-left: 10px;\n"
"border: 1px solid  rgb(85, 0, 255);")
        self.register_buttion.setObjectName("register_buttion")
        self.splitter = QtWidgets.QSplitter(login_form)
        self.splitter.setGeometry(QtCore.QRect(180, 140, 311, 51))
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setObjectName("splitter")
        self.label = QtWidgets.QLabel(self.splitter)
        self.label.setEnabled(False)
        self.label.setObjectName("label")
        self.account = QtWidgets.QLineEdit(self.splitter)
        self.account.setStyleSheet("height: 30px;\n"
"border-radius: 15px;\n"
"padding-left: 10px;\n"
"border: 1px solid  rgb(85, 0, 255);")
        self.account.setPlaceholderText("")
        self.account.setObjectName("account")

        self.title = QtWidgets.QLabel(login_form)
        self.title.setGeometry(QtCore.QRect(160, 20, 351, 121))
        self.title.setObjectName("title")
        self.splitter_2 = QtWidgets.QSplitter(login_form)
        self.splitter_2.setGeometry(QtCore.QRect(180, 220, 311, 51))
        self.splitter_2.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_2.setObjectName("splitter_2")
        self.label_2 = QtWidgets.QLabel(self.splitter_2)
        self.label_2.setObjectName("label_2")
        self.password = QtWidgets.QLineEdit(self.splitter_2)
        self.password.setEchoMode(QtWidgets.QLineEdit.Password)
        self.password.setStyleSheet("height: 30px;\n"
"border-radius: 15px;\n"
"padding-left: 10px;\n"
"border: 1px solid  rgb(85, 0, 255);")
        self.password.setObjectName("password")

        self.retranslateUi(login_form)
        QtCore.QMetaObject.connectSlotsByName(login_form)

        #事件处理bufen

        self.determine_buttion.clicked.connect(self.login)# 连接点击确定按钮的槽函数
        self.register_buttion.clicked.connect(self.register)

    def retranslateUi(self, login_form):
        _translate = QtCore.QCoreApplication.translate
        login_form.setWindowTitle(_translate("login_form", "Form"))
        self.determine_buttion.setText(_translate("login_form", "确定"))
        self.register_buttion.setText(_translate("login_form", "注册"))
        self.label.setText(_translate("login_form", "<html><head/><body><p><span style=\" font-size:16pt; color:#040404;\">账号:</span></p></body></html>"))
        self.title.setText(_translate("login_form", "<html><head/><body><p align=\"center\"><span style=\" font-size:28pt;\">Word查重系统</span></p></body></html>"))
        self.label_2.setText(_translate("login_form", "<html><head/><body><p><span style=\" font-size:16pt;\">密码:</span></p></body></html>"))

    def login(self):
        # 获取用户输入的用户名和密码
        username = self.account.text()
        password = self.password.text()

        # 调用DatabaseHandler中的方法验证登录
        # 调用 DatabaseHandler 中的方法验证登录
        try:
            user = self.db_handler.verify_login(username, password)
            if user is not None:
                QtWidgets.QMessageBox.information(self.Form, '登录成功', '欢迎登录！')
                if user.is_admin:
                    self.close()
                    admin=db.Admin(user.username,user.account,user.password,user.is_admin)
                    admin_ui=adminUI.adminUiWorkForm(admin,parent=self.Form)
                    admin_ui.show()


                else:
                    self.close()
                    user=db.nomal_user(user.username,user.account,user.password,user.is_admin)
                    user_ui=userUI.userUiWorkForm(user,parent=self.Form)
                    user_ui.show()

            else:
                QtWidgets.QMessageBox.warning(self.Form, '登录失败', '用户名或密码错误，请重新输入。')
        except Exception as e:
            print("Login error:", e)

    def register(self):

        try:

            self.registe_ui=registe.Ui_registe_Form()
            # 关闭当前窗体
            self.registe_ui.show()
            self.Form.close()
        except Exception as e:
            print("error:",e)



#简单工厂模式
def create_login_window():
    import sys
    app = QtWidgets.QApplication(sys.argv)
    login_form = QtWidgets.QWidget()
    ui = Ui_login_form()
    ui.setupUi(login_form)
    login_form.show()
    sys.exit(app.exec_())
if __name__ == "__main__":

    create_login_window()

